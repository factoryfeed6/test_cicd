name: Deployment (Container)
on:
  push:
    branches:
      - main
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: Testing
    runs-on: ubuntu-latest
    container: 
      image: node:16
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb+srv
      MONGODB_CLUSTER_ADDRESS: cluster1.bfazxht.mongodb.net
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}

      ### mongo db for isolated workflow
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      # MONGO_INITDB_CLUSTER_ADDRESS: mongodb
      MONGO_INITDB_CLUSTER_ADDRESS: 127.0.0.1:27017
      MONGO_INITDB_CLUSTER_PROTOCOL: mongodb
      PORT: 8080
    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ env.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ env.MONGO_INITDB_ROOT_PASSWORD }}
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"



##### 
#container: 
    # image: node:16

### this above container & image are reserved key words 
### this are used to may use of container to runn the workflow
### MONGO_INITDB_CLUSTER_ADDRESS: mongodb
#### if we are using the container for isolated wf then we will use the servies where we will specify the image and connection address  
## the github runner is used to host the docker image 
### the rest of the actions is executed inside the image
#### see even we comment out the container thing the workflow run using ubuntu & still we can use the service container 
### but now there wont be some automated network will be created  using continaer lables for connectiing that wont work
## instead of that you have to use local IP addesss need to hardcoded & also you can specify the port no.
### port no. should be forworded 


#### services & image is a reserved key word
### Service containers to run with `container-job`
#### mongodb is user defined
